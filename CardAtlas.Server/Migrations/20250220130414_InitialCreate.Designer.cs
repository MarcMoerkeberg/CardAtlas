// <auto-generated />
using System;
using CardAtlas.Server.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CardAtlas.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250220130414_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ScryfallId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Card", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<bool>("CanBeFoundInBoosters")
                        .HasColumnType("bit");

                    b.Property<long>("CardLegalityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CollectorNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("ColorIdentity")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<decimal?>("ConvertedManaCost")
                        .HasPrecision(8, 1)
                        .HasColumnType("decimal(8,1)");

                    b.Property<string>("FlavorText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FrameLayoutId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDigitalOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullArt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOversized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPromo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReprint")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTextless")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Loyalty")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ManaCost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OracleText")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<long?>("ParentCardId")
                        .HasColumnType("bigint");

                    b.Property<string>("Power")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PromoTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RarityId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("ScryfallId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.Property<string>("Toughness")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("TypeLine")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("CardLegalityId");

                    b.HasIndex("FrameLayoutId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ParentCardId");

                    b.HasIndex("RarityId");

                    b.HasIndex("SetId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.CardLegality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AlchemyLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("BrawlLegalityId")
                        .HasColumnType("int");

                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<int>("CommanderLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("DuelCommanderLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("ExplorerLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("FutureLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("GladiatorLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("HistoricLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("LegacyLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("ModernLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("OatBreakerLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("OldSchoolLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("PauperCommanderLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("PauperLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("PennyLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("PioneerLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("PreDHLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("PreModernlLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("StandardBrawlLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("StandardLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("TimelessLegalityId")
                        .HasColumnType("int");

                    b.Property<int>("VintageLegalityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlchemyLegalityId");

                    b.HasIndex("BrawlLegalityId");

                    b.HasIndex("CardId");

                    b.HasIndex("CommanderLegalityId");

                    b.HasIndex("DuelCommanderLegalityId");

                    b.HasIndex("ExplorerLegalityId");

                    b.HasIndex("FutureLegalityId");

                    b.HasIndex("GladiatorLegalityId");

                    b.HasIndex("HistoricLegalityId");

                    b.HasIndex("LegacyLegalityId");

                    b.HasIndex("ModernLegalityId");

                    b.HasIndex("OatBreakerLegalityId");

                    b.HasIndex("OldSchoolLegalityId");

                    b.HasIndex("PauperCommanderLegalityId");

                    b.HasIndex("PauperLegalityId");

                    b.HasIndex("PennyLegalityId");

                    b.HasIndex("PioneerLegalityId");

                    b.HasIndex("PreDHLegalityId");

                    b.HasIndex("PreModernlLegalityId");

                    b.HasIndex("StandardBrawlLegalityId");

                    b.HasIndex("StandardLegalityId");

                    b.HasIndex("TimelessLegalityId");

                    b.HasIndex("VintageLegalityId");

                    b.ToTable("CardLegalities");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.CardPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("FoilPrice")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("PurchaseUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("VendorId");

                    b.ToTable("CardPrices");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Usd"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Eur"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tix"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.FrameLayout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FrameLayouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Year1993"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Year1997"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Year2003"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Year2015"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Future"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.GameType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("GameTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Paper"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Arena"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mtgo"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Image.CardImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ImageFormatId")
                        .HasColumnType("int");

                    b.Property<int>("ImageStatusId")
                        .HasColumnType("int");

                    b.Property<int>("ImageTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ImageFormatId");

                    b.HasIndex("ImageStatusId");

                    b.HasIndex("ImageTypeId");

                    b.ToTable("CardImages");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Image.ImageFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ImageFormats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PNG"
                        },
                        new
                        {
                            Id = 2,
                            Name = "JPG"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Image.ImageStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ImageStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Missing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Placeholder"
                        },
                        new
                        {
                            Id = 3,
                            Name = "LowResolution"
                        },
                        new
                        {
                            Id = 4,
                            Name = "HighResolutionScan"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Image.ImageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ImageTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Png"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BorderCrop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ArtCrop"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Large"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Small"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrintCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "en",
                            Name = "English",
                            PrintCode = "en"
                        },
                        new
                        {
                            Id = 2,
                            Code = "es",
                            Name = "Spanish",
                            PrintCode = "sp"
                        },
                        new
                        {
                            Id = 3,
                            Code = "fr",
                            Name = "French",
                            PrintCode = "fr"
                        },
                        new
                        {
                            Id = 4,
                            Code = "de",
                            Name = "German",
                            PrintCode = "de"
                        },
                        new
                        {
                            Id = 5,
                            Code = "it",
                            Name = "Italian",
                            PrintCode = "it"
                        },
                        new
                        {
                            Id = 6,
                            Code = "pt",
                            Name = "Portuguese",
                            PrintCode = "pt"
                        },
                        new
                        {
                            Id = 7,
                            Code = "ja",
                            Name = "Japanese",
                            PrintCode = "jp"
                        },
                        new
                        {
                            Id = 8,
                            Code = "ko",
                            Name = "Korean",
                            PrintCode = "kr"
                        },
                        new
                        {
                            Id = 9,
                            Code = "ru",
                            Name = "Russian",
                            PrintCode = "ru"
                        },
                        new
                        {
                            Id = 10,
                            Code = "zhs",
                            Name = "SimplifiedChinese",
                            PrintCode = "cs"
                        },
                        new
                        {
                            Id = 11,
                            Code = "zht",
                            Name = "TraditionalChinese",
                            PrintCode = "ct"
                        },
                        new
                        {
                            Id = 12,
                            Code = "he",
                            Name = "Hebrew"
                        },
                        new
                        {
                            Id = 13,
                            Code = "la",
                            Name = "Latin"
                        },
                        new
                        {
                            Id = 14,
                            Code = "grc",
                            Name = "AncientGreek"
                        },
                        new
                        {
                            Id = 15,
                            Code = "ar",
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = 16,
                            Code = "sa",
                            Name = "Sanskrit"
                        },
                        new
                        {
                            Id = 17,
                            Code = "ph",
                            Name = "Phyrexian",
                            PrintCode = "ph"
                        },
                        new
                        {
                            Id = -1,
                            Code = "NA",
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Legality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Legalities");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.PrintFinish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PrintFinishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Foil"
                        },
                        new
                        {
                            Id = 2,
                            Name = "NonFoil"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Etched"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Rarity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Rarities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Common"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Uncommon"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rare"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Special"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mythic"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bonus"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArenaCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Block")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("BlockCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<bool>("IsDigitalOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFoilOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNonFoilOnly")
                        .HasColumnType("bit");

                    b.Property<string>("MtgoCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfCardsInSet")
                        .HasColumnType("int");

                    b.Property<string>("ParentSetCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("ScryfallId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetTypeId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.SetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("SetTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Core"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Expansion"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Masters"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Alchemy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Masterpiece"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Arsenal"
                        },
                        new
                        {
                            Id = 7,
                            Name = "FromTheVault"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Spellbook"
                        },
                        new
                        {
                            Id = 9,
                            Name = "PremiumDeck"
                        },
                        new
                        {
                            Id = 10,
                            Name = "DuelDeck"
                        },
                        new
                        {
                            Id = 11,
                            Name = "DraftInnovation"
                        },
                        new
                        {
                            Id = 12,
                            Name = "TreasureChest"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Commander"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Planechase"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Archenemy"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Vanguard"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Funny"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Starter"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Box"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Promo"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Token"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Memorabilia"
                        },
                        new
                        {
                            Id = 23,
                            Name = "MiniGame"
                        },
                        new
                        {
                            Id = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyId = 1,
                            Name = "TcgPlayer"
                        },
                        new
                        {
                            Id = 2,
                            CurrencyId = 2,
                            Name = "CardMarket"
                        },
                        new
                        {
                            Id = 3,
                            CurrencyId = 3,
                            Name = "CardHoarder"
                        },
                        new
                        {
                            Id = -1,
                            CurrencyId = -1,
                            Name = "NotImplemented"
                        });
                });

            modelBuilder.Entity("CardGameType", b =>
                {
                    b.Property<long>("CardsId")
                        .HasColumnType("bigint");

                    b.Property<int>("GameTypesId")
                        .HasColumnType("int");

                    b.HasKey("CardsId", "GameTypesId");

                    b.HasIndex("GameTypesId");

                    b.ToTable("CardGameType");
                });

            modelBuilder.Entity("CardPrintFinish", b =>
                {
                    b.Property<long>("CardsId")
                        .HasColumnType("bigint");

                    b.Property<int>("PrintFinishesId")
                        .HasColumnType("int");

                    b.HasKey("CardsId", "PrintFinishesId");

                    b.HasIndex("PrintFinishesId");

                    b.ToTable("CardPrintFinish");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Card", b =>
                {
                    b.HasOne("CardAtlas.Server.Models.Data.Artist", "Artist")
                        .WithMany("Cards")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.CardLegality", "Legality")
                        .WithMany()
                        .HasForeignKey("CardLegalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.FrameLayout", "FrameLayout")
                        .WithMany("Cards")
                        .HasForeignKey("FrameLayoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Language", "Language")
                        .WithMany("Cards")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Card", "ParentCard")
                        .WithMany()
                        .HasForeignKey("ParentCardId");

                    b.HasOne("CardAtlas.Server.Models.Data.Rarity", "Rarity")
                        .WithMany("Cards")
                        .HasForeignKey("RarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Set", "Set")
                        .WithMany("Cards")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("FrameLayout");

                    b.Navigation("Language");

                    b.Navigation("Legality");

                    b.Navigation("ParentCard");

                    b.Navigation("Rarity");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.CardLegality", b =>
                {
                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Alchemy")
                        .WithMany()
                        .HasForeignKey("AlchemyLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Brawl")
                        .WithMany()
                        .HasForeignKey("BrawlLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Commander")
                        .WithMany()
                        .HasForeignKey("CommanderLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "DuelCommander")
                        .WithMany()
                        .HasForeignKey("DuelCommanderLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Explorer")
                        .WithMany()
                        .HasForeignKey("ExplorerLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Future")
                        .WithMany()
                        .HasForeignKey("FutureLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Gladiator")
                        .WithMany()
                        .HasForeignKey("GladiatorLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Historic")
                        .WithMany()
                        .HasForeignKey("HistoricLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Legacy")
                        .WithMany()
                        .HasForeignKey("LegacyLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Modern")
                        .WithMany()
                        .HasForeignKey("ModernLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "OatBreaker")
                        .WithMany()
                        .HasForeignKey("OatBreakerLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "OldSchool")
                        .WithMany()
                        .HasForeignKey("OldSchoolLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "PauperCommander")
                        .WithMany()
                        .HasForeignKey("PauperCommanderLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Pauper")
                        .WithMany()
                        .HasForeignKey("PauperLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Penny")
                        .WithMany()
                        .HasForeignKey("PennyLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Pioneer")
                        .WithMany()
                        .HasForeignKey("PioneerLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "PreDH")
                        .WithMany()
                        .HasForeignKey("PreDHLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "PreModern")
                        .WithMany()
                        .HasForeignKey("PreModernlLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "StandardBrawl")
                        .WithMany()
                        .HasForeignKey("StandardBrawlLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Standard")
                        .WithMany()
                        .HasForeignKey("StandardLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Timeless")
                        .WithMany()
                        .HasForeignKey("TimelessLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Legality", "Vintage")
                        .WithMany()
                        .HasForeignKey("VintageLegalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alchemy");

                    b.Navigation("Brawl");

                    b.Navigation("Card");

                    b.Navigation("Commander");

                    b.Navigation("DuelCommander");

                    b.Navigation("Explorer");

                    b.Navigation("Future");

                    b.Navigation("Gladiator");

                    b.Navigation("Historic");

                    b.Navigation("Legacy");

                    b.Navigation("Modern");

                    b.Navigation("OatBreaker");

                    b.Navigation("OldSchool");

                    b.Navigation("Pauper");

                    b.Navigation("PauperCommander");

                    b.Navigation("Penny");

                    b.Navigation("Pioneer");

                    b.Navigation("PreDH");

                    b.Navigation("PreModern");

                    b.Navigation("Standard");

                    b.Navigation("StandardBrawl");

                    b.Navigation("Timeless");

                    b.Navigation("Vintage");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.CardPrice", b =>
                {
                    b.HasOne("CardAtlas.Server.Models.Data.Card", "Card")
                        .WithMany("CardPrices")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Image.CardImage", b =>
                {
                    b.HasOne("CardAtlas.Server.Models.Data.Card", "Card")
                        .WithMany("ImageUris")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Image.ImageFormat", "ImageFormat")
                        .WithMany("ImageFormats")
                        .HasForeignKey("ImageFormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Image.ImageStatus", "ImageStatus")
                        .WithMany("CardImages")
                        .HasForeignKey("ImageStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.Image.ImageType", "ImageType")
                        .WithMany("CardImages")
                        .HasForeignKey("ImageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("ImageFormat");

                    b.Navigation("ImageStatus");

                    b.Navigation("ImageType");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Set", b =>
                {
                    b.HasOne("CardAtlas.Server.Models.Data.SetType", "SetType")
                        .WithMany("Sets")
                        .HasForeignKey("SetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SetType");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Vendor", b =>
                {
                    b.HasOne("CardAtlas.Server.Models.Data.Currency", "Currency")
                        .WithMany("Vendors")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("CardGameType", b =>
                {
                    b.HasOne("CardAtlas.Server.Models.Data.Card", null)
                        .WithMany()
                        .HasForeignKey("CardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.GameType", null)
                        .WithMany()
                        .HasForeignKey("GameTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CardPrintFinish", b =>
                {
                    b.HasOne("CardAtlas.Server.Models.Data.Card", null)
                        .WithMany()
                        .HasForeignKey("CardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardAtlas.Server.Models.Data.PrintFinish", null)
                        .WithMany()
                        .HasForeignKey("PrintFinishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Artist", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Card", b =>
                {
                    b.Navigation("CardPrices");

                    b.Navigation("ImageUris");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Currency", b =>
                {
                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.FrameLayout", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Image.ImageFormat", b =>
                {
                    b.Navigation("ImageFormats");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Image.ImageStatus", b =>
                {
                    b.Navigation("CardImages");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Image.ImageType", b =>
                {
                    b.Navigation("CardImages");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Language", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Rarity", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.Set", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("CardAtlas.Server.Models.Data.SetType", b =>
                {
                    b.Navigation("Sets");
                });
#pragma warning restore 612, 618
        }
    }
}
